#!/bin/bash

echo "[INFO] post_push script starting"

# The logic here is that DOCKER_TAG variable contains the
# tag and architecture for which we want build the image
# as pair with - in between (e.g. latest-amd64)
# if that is not true, then this script will fail
TAG=$(echo ${DOCKER_TAG} | cut -f1 -d-)
TARGET_ARCH=$(echo ${DOCKER_TAG} | cut -f2 -d-)
BUILD_ARCH=$(uname -m)

echo "[INFO] Manifest declaration begin:"
docker manifest inspect anagno/self_service_password:${TAG}

MANIFEST_EXIST=$?
echo "[INFO] Delcation declaration end."

if [[ ${MANIFEST_EXIST} == 0 ]]; then
    docker manifest create --amend \
        anagno/self_service_password:${TAG} \
        anagno/self_service_password:${DOCKER_TAG}
else
    docker manifest create \
        anagno/self_service_password:${TAG} \
        anagno/self_service_password:${DOCKER_TAG}
fi


# We "translate" the official naming convetion of Docker
# to the one used in the manifest
if [ ${TARGET_ARCH} == "amd64" ]; then
    docker manifest annotate \
        anagno/self_service_password:${TAG} \
        anagno/self_service_password:${DOCKER_TAG} --os linux --arch amd64
fi

if [ ${TARGET_ARCH} == "arm32v7" ]; then
    docker manifest annotate \
        anagno/self_service_password:${TAG} \
        anagno/self_service_password:${DOCKER_TAG} --os linux --arch arm --variant v7
fi

if [ ${TARGET_ARCH} == "arm64v8" ]; then
    docker manifest annotate \
        anagno/self_service_password:${TAG} \
        anagno/self_service_password:${DOCKER_TAG} --os linux --arch arm64 --variant v8
fi

if [ ${TARGET_ARCH} == "i386" ]; then
        docker manifest annotate \
        anagno/self_service_password:${TAG} \
        anagno/self_service_password:${DOCKER_TAG} --os linux --arch 386
fi



docker manifest push --purge anagno/self_service_password:${TAG}

echo "[INFO] post_push script ending"


# Copyright (c) 2019 Vasileios Athanasios Anagnostopoulos

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.